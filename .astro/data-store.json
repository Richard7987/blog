[["Map",1,2,9,10,100,101],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.12.3","content-config-digest","46d2a5bdfff2cf14","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://blahg.netlify.app/\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"material-theme-darker\",\"themes\":{},\"wrap\":true,\"transformers\":[]},\"remarkPlugins\":[null],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","posts",["Map",11,12,34,35,53,54],"prueba1",{"id":11,"data":13,"body":20,"filePath":21,"digest":22,"rendered":23},{"title":14,"slug":11,"description":15,"added":16,"updated":17,"tags":18},"Prueba con Tina para entrada de una nota ","Creacion de una nota ",["Date","2025-07-22T13:29:52.038Z"],["Date","2025-07-22T06:00:00.000Z"],[19],"personal","mi primer nota","posts/prueba1.md","03f50c0dd37c8a88",{"html":24,"metadata":25},"\u003Cp>mi primer nota\u003C/p>",{"headings":26,"localImagePaths":27,"remoteImagePaths":28,"frontmatter":29,"imagePaths":33},[],[],[],{"title":14,"slug":11,"description":15,"tags":30,"added":31,"updated":32},[19],["Date","2025-07-22T13:29:52.038Z"],["Date","2025-07-22T06:00:00.000Z"],[],"hello-world",{"id":34,"data":36,"body":41,"filePath":42,"digest":43,"rendered":44},{"title":37,"slug":34,"description":38,"added":39,"tags":40},"Hello, world!","This is an example blog!","May 01 2024",[19],"This is an example blog post!","posts/hello-world.md","a5a0f2f9dc8da02e",{"html":45,"metadata":46},"\u003Cp>This is an example blog post!\u003C/p>",{"headings":47,"localImagePaths":48,"remoteImagePaths":49,"frontmatter":50,"imagePaths":52},[],[],[],{"title":37,"slug":34,"description":38,"tags":51,"added":39},[19],[],"markdown",{"id":53,"data":55,"body":61,"filePath":62,"digest":63,"rendered":64},{"title":56,"slug":53,"description":57,"added":58,"tags":59},"Markdown Example","Check out how markdown is rendered!","May 09 2024",[60],"technical","This is an example blog post!\n\n# Heading 1\n\nThis is an example lil thingy wow look at me!\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n##### Heading 5\n\n###### Heading 6\n\nI'm baby tumblr deep v franzen [umami hammock](https://google.com) scenester retro VHS, pop-up truffaut tacos polaroid gochujang. Jean ugh _vexillologist snackwave keytar williamsburg bitters pinterest_. Photo booth schlitz quinoa tbh edison bulb vexillologist occupy single-origin dreamcatcher. **Chartreuse meggings gochujang synth.** Narwhal green juice snackwave thundercats kickstarter XOXO deep v.\n\n1. numbered\n2. list\n3. of\n4. items\n\nHello there, welcome to my list.\n\n- list\n- of\n- items\n  - nested\n  - list\n- wow\n\n## Hello, babies, I think that you need to understand what a long line length is\n\nV franzen umami hammock scenester retro VHS, pop-up truffaut tacos polaroid heirloom gochujang.\n\n- [x] hello\n- [ ] these\n- [x] are\n- [ ] tasks\n\n**bold** _italic_\n**_bold and italic_**\n\n```js\n// This is an example of some React\n\nuseEffect(() => {\n\tlet isCurrent = true;\n\n\tif (isCurrent === true) {\n\t\tfetch(\"...\");\n\t}\n\n\treturn () => {\n\t\tisCurrent = false;\n\t};\n}, []);\n```\n\nLanguage-less:\n\n```\nuseEffect(() => { // wow\n  let isCurrent = true;\n\n  if (isCurrent === true) {\n  \tfetch('...')\n  }\n\n  return () => {\n  \tisCurrent = false;\n  }\n}, [])\n```\n\nA horizontal line:\n\n---\n\nSome inline `code` between normal text\n\n> A blockquote, lorem ipsum dolor\n\nJust some normal text, wow.\n\n---\n\n| Example table | Example things |\n| ------------- | -------------- |\n| What          | how            |\n| Why           | when           |\n\nOkay, that's it! Good luck! Write more! Follow your dreams!","posts/markdown-example.md","b43f932b64a68879",{"html":65,"metadata":66},"\u003Cp>This is an example blog post!\u003C/p>\n\u003Ch1 id=\"heading-1\">Heading 1\u003C/h1>\n\u003Cp>This is an example lil thingy wow look at me!\u003C/p>\n\u003Ch2 id=\"heading-2\">Heading 2\u003C/h2>\n\u003Ch3 id=\"heading-3\">Heading 3\u003C/h3>\n\u003Ch4 id=\"heading-4\">Heading 4\u003C/h4>\n\u003Ch5 id=\"heading-5\">Heading 5\u003C/h5>\n\u003Ch6 id=\"heading-6\">Heading 6\u003C/h6>\n\u003Cp>I’m baby tumblr deep v franzen \u003Ca href=\"https://google.com\">umami hammock\u003C/a> scenester retro VHS, pop-up truffaut tacos polaroid gochujang. Jean ugh \u003Cem>vexillologist snackwave keytar williamsburg bitters pinterest\u003C/em>. Photo booth schlitz quinoa tbh edison bulb vexillologist occupy single-origin dreamcatcher. \u003Cstrong>Chartreuse meggings gochujang synth.\u003C/strong> Narwhal green juice snackwave thundercats kickstarter XOXO deep v.\u003C/p>\n\u003Col>\n\u003Cli>numbered\u003C/li>\n\u003Cli>list\u003C/li>\n\u003Cli>of\u003C/li>\n\u003Cli>items\u003C/li>\n\u003C/ol>\n\u003Cp>Hello there, welcome to my list.\u003C/p>\n\u003Cul>\n\u003Cli>list\u003C/li>\n\u003Cli>of\u003C/li>\n\u003Cli>items\n\u003Cul>\n\u003Cli>nested\u003C/li>\n\u003Cli>list\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>wow\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"hello-babies-i-think-that-you-need-to-understand-what-a-long-line-length-is\">Hello, babies, I think that you need to understand what a long line length is\u003C/h2>\n\u003Cp>V franzen umami hammock scenester retro VHS, pop-up truffaut tacos polaroid heirloom gochujang.\u003C/p>\n\u003Cul class=\"contains-task-list\">\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> hello\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> these\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> are\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> tasks\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>bold\u003C/strong> \u003Cem>italic\u003C/em>\n\u003Cstrong>\u003Cem>bold and italic\u003C/em>\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code material-theme-darker\" style=\"background-color:#212121;color:#EEFFFF; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#545454;font-style:italic\">// This is an example of some React\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#82AAFF\">useEffect\u003C/span>\u003Cspan style=\"color:#EEFFFF\">(\u003C/span>\u003Cspan style=\"color:#89DDFF\">()\u003C/span>\u003Cspan style=\"color:#C792EA\"> =>\u003C/span>\u003Cspan style=\"color:#89DDFF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#C792EA\">\tlet\u003C/span>\u003Cspan style=\"color:#EEFFFF\"> isCurrent\u003C/span>\u003Cspan style=\"color:#89DDFF\"> =\u003C/span>\u003Cspan style=\"color:#FF9CAC\"> true\u003C/span>\u003Cspan style=\"color:#89DDFF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#89DDFF;font-style:italic\">\tif\u003C/span>\u003Cspan style=\"color:#F07178\"> (\u003C/span>\u003Cspan style=\"color:#EEFFFF\">isCurrent\u003C/span>\u003Cspan style=\"color:#89DDFF\"> ===\u003C/span>\u003Cspan style=\"color:#FF9CAC\"> true\u003C/span>\u003Cspan style=\"color:#F07178\">) \u003C/span>\u003Cspan style=\"color:#89DDFF\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#82AAFF\">\t\tfetch\u003C/span>\u003Cspan style=\"color:#F07178\">(\u003C/span>\u003Cspan style=\"color:#89DDFF\">\"\u003C/span>\u003Cspan style=\"color:#C3E88D\">...\u003C/span>\u003Cspan style=\"color:#89DDFF\">\"\u003C/span>\u003Cspan style=\"color:#F07178\">)\u003C/span>\u003Cspan style=\"color:#89DDFF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#89DDFF\">\t}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#89DDFF;font-style:italic\">\treturn\u003C/span>\u003Cspan style=\"color:#89DDFF\"> ()\u003C/span>\u003Cspan style=\"color:#C792EA\"> =>\u003C/span>\u003Cspan style=\"color:#89DDFF\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#EEFFFF\">\t\tisCurrent\u003C/span>\u003Cspan style=\"color:#89DDFF\"> =\u003C/span>\u003Cspan style=\"color:#FF9CAC\"> false\u003C/span>\u003Cspan style=\"color:#89DDFF\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#89DDFF\">\t};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#89DDFF\">},\u003C/span>\u003Cspan style=\"color:#EEFFFF\"> [])\u003C/span>\u003Cspan style=\"color:#89DDFF\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Language-less:\u003C/p>\n\u003Cpre class=\"astro-code material-theme-darker\" style=\"background-color:#212121;color:#EEFFFF; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>useEffect(() => { // wow\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  let isCurrent = true;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  if (isCurrent === true) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \tfetch('...')\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  return () => {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \tisCurrent = false;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>}, [])\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>A horizontal line:\u003C/p>\n\u003Chr>\n\u003Cp>Some inline \u003Ccode>code\u003C/code> between normal text\u003C/p>\n\u003Cblockquote>\n\u003Cp>A blockquote, lorem ipsum dolor\u003C/p>\n\u003C/blockquote>\n\u003Cp>Just some normal text, wow.\u003C/p>\n\u003Chr>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Example table\u003C/th>\u003Cth>Example things\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>What\u003C/td>\u003Ctd>how\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Why\u003C/td>\u003Ctd>when\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cp>Okay, that’s it! Good luck! Write more! Follow your dreams!\u003C/p>",{"headings":67,"localImagePaths":95,"remoteImagePaths":96,"frontmatter":97,"imagePaths":99},[68,72,76,80,84,88,92],{"depth":69,"slug":70,"text":71},1,"heading-1","Heading 1",{"depth":73,"slug":74,"text":75},2,"heading-2","Heading 2",{"depth":77,"slug":78,"text":79},3,"heading-3","Heading 3",{"depth":81,"slug":82,"text":83},4,"heading-4","Heading 4",{"depth":85,"slug":86,"text":87},5,"heading-5","Heading 5",{"depth":89,"slug":90,"text":91},6,"heading-6","Heading 6",{"depth":73,"slug":93,"text":94},"hello-babies-i-think-that-you-need-to-understand-what-a-long-line-length-is","Hello, babies, I think that you need to understand what a long line length is",[],[],{"title":56,"slug":53,"description":57,"tags":98,"added":58},[60],[],"projects",["Map",102,103,122,123,193,194],"server",{"id":102,"data":104,"filePath":110,"digest":111,"rendered":112},{"title":105,"slug":102,"description":106,"added":107,"tags":108},"Home Server Setup","Configured a 24/7 home server with privacy-focused, self-hosted services and hardened security.",["Date","2025-07-25T04:18:26.705Z"],[109],"work","projects/server.md","2e09e8c6efaef608",{"html":113,"metadata":114},"",{"headings":115,"localImagePaths":116,"remoteImagePaths":117,"frontmatter":118,"imagePaths":121},[],[],[],{"title":105,"slug":102,"description":106,"tags":119,"added":120},[109],["Date","2025-07-25T04:18:26.705Z"],[],"autonomous-drone",{"id":122,"data":124,"body":129,"filePath":130,"digest":131,"rendered":132},{"title":125,"slug":122,"description":126,"added":127,"tags":128},"Autonomous AI-Powered Drone","Designed and built a fully autonomous drone with custom control systems and computer vision powered by AI.",["Date","2024-05-05T06:00:00.000Z"],[100],"## Resumen del Proyecto\n\nEl objetivo de este proyecto es desarrollar un UAV (dron de ala fija) basado en el modelo **Eclipson Pathfinder** para misiones de vigilancia y reconocimiento. Se busca crear un sistema que pueda operar de forma **completamente autónoma**, responder a comandos para dirigirse a puntos específicos y, una vez en posición, permitir control manual o continuar en modo automático mientras analiza el entorno.\n\nEl sistema está diseñado para ser **eficiente y de bajo costo**, utilizando solo los componentes esenciales para maximizar la autonomía de vuelo y la funcionalidad.\n\n---\n\n## Características Principales\n\n### Navegación Autónoma\n\n- Sistema de vuelo autónomo mediante **Cube Orange + GPS Here3**\n- Capacidad de seguir rutas predefinidas con múltiples waypoints\n- Algoritmos de evasión de obstáculos y rutas alternativas\n\n### Modos de Operación\n\n- **Modo autónomo**: Navegación a un punto designado sin intervención humana\n- **Modo de espera (Loiter Mode)**: Mantiene posición en la zona de interés mientras analiza el entorno\n- **Control manual**: Posibilidad de tomar control con un radio FrSky Taranis X9D\n- **Regreso automático**: Si no hay intervención o ante batería baja, regresa al punto de origen\n\n### Transmisión y Análisis\n\n- Transmisión de video FPV en tiempo real mediante el sistema **DJI FPV Air Unit**\n- Análisis de imágenes (opcional) con **Raspberry Pi 4 + Módulo 4G/LTE** para detección de personas y vehículos\n- Telemetría bidireccional para monitoreo de estado y ajustes en tiempo real\n\n---\n\n## Componentes Esenciales\n\n### 1️. Estructura y Propulsión\n\n| Componente   | Especificación              | Función                                     |\n|--------------|-----------------------------|---------------------------------------------|\n| Chasis       | **Eclipson Pathfinder**     | Estructura aerodinámica impresa en 3D o kit |\n| Motor        | **T-Motor AT2312 KV1400**   | Propulsión principal con alta eficiencia    |\n| Hélice       | **APC 7x4**                 | Optimizada para eficiencia y empuje         |\n| ESC          | **T-Motor 30A**             | Control preciso del motor                   |\n| Servos       | **2x SG90 o MG90S**         | Control de superficies de vuelo             |\n| Batería      | **3S 2200mAh - 4S 3300mAh** | Alimentación con autonomía de 30-45 min     |\n| Power Module | **Holybro PM06**            | Distribución y monitoreo de energía         |\n\n### 2️. Controlador de Vuelo y Navegación\n\n| Componente          | Especificación                  | Función                                     |\n|---------------------|---------------------------------|---------------------------------------------|\n| Controlador         | **Cube Orange + Carrier Board** | Cerebro del sistema, procesamiento de vuelo |\n| GPS                 | **Here3 GPS**                   | Posicionamiento preciso y navegación        |\n| Sensor de velocidad | **Airspeed Sensor digital**     | Medición de velocidad relativa al aire      |\n\n### 3️. Comunicación y Control\n\n| Componente    | Especificación                                 | Función                             |\n|---------------|------------------------------------------------|-------------------------------------|\n| Radio control | **FrSky Taranis X9D + Receptor R9 Slim+ SBUS** | Control manual de respaldo          |\n| Telemetría    | **SiK Radio 915MHz o RFD900x**                 | Comunicación bidireccional de datos |\n| Sistema FPV   | **DJI FPV Air Unit**                           | Transmisión de video en tiempo real |\n\n### 4️. Visión y Procesamiento (Opcional)\n\n| Componente   | Especificación        | Función                                |\n|--------------|-----------------------|----------------------------------------|\n| Computadora  | **Raspberry Pi 4**    | Procesamiento de imágenes y datos      |\n| Software     | **YOLOv8 ligero**     | Detección de objetos en tiempo real    |\n| Conectividad | **Módulo 4G/LTE USB** | Transmisión de datos a larga distancia |\n\n---\n\n## Modos de Operación Detallados\n\n1. **Modo Autónomo**:\n   - El drone despega y vuela hasta el punto designado siguiendo una ruta predefinida\n   - Mantiene altitud y velocidad constantes durante el trayecto\n   - Ajusta parámetros de vuelo según condiciones ambientales\n2. **Modo Loiter**:\n   - Mantiene un patrón de vuelo circular o estacionario en la zona de interés\n   - Ajusta radio y velocidad según necesidades de vigilancia\n   - Optimiza consumo energético para maximizar tiempo en zona\n3. **Control Manual**:\n   - El operador puede tomar el control con el radio FrSky en cualquier momento\n   - Transición suave entre modos autónomo y manual\n   - Alertas de telemetría para el operador\n4. **Modo FPV**:\n   - Transmite video en tiempo real con DJI FPV\n   - Baja latencia para control preciso\n   - Superposición de datos de telemetría en pantalla\n5. **Regreso Automático**:\n   - Se activa por comando, batería baja o pérdida de señal\n   - Calcula ruta óptima de regreso considerando viento y obstáculos\n   -  Aterrizaje automático en punto de origen\n\n***\n\n## Plan de Implementación\n\n### Fase 1: Construcción\n\n- Ensamblar el UAV con los componentes mínimos\n- Integrar sistema de propulsión y control\n- Instalar controlador de vuelo y sensores\n\n### Fase 2: Configuración\n\n- Configurar y calibrar Cube Orange con ArduPilot\n- Programar misiones básicas y parámetros de vuelo\n-  Ajustar PID para estabilidad óptima\n\n### Fase 3: Pruebas\n\n- Realizar pruebas de vuelo controlado\n- Validar navegación autónoma con waypoints\n- Probar sistemas de seguridad y recuperación\n\n### Fase 4: Optimización\n\n- Integrar el sistema FPV de DJI\n- Implementar análisis de imágenes (opcional)\n- Optimizar consumo energético y autonomía\n\n## Recursos y Referencias\n\n- [Documentación oficial de ArduPilot](https://ardupilot.org/plane/)\n- [Especificaciones del Eclipson Pathfinder](https://www.eclipson-airplanes.com/)\n- [Guía de configuración de Cube Orange](https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview)\n- [Tutorial de implementación de YOLOv8 en Raspberry Pi](https://github.com/ultralytics/ultralytics)","projects/autonomous-drone.md","2cd3b95cba1015b2",{"html":133,"metadata":134},"\u003Ch2 id=\"resumen-del-proyecto\">Resumen del Proyecto\u003C/h2>\n\u003Cp>El objetivo de este proyecto es desarrollar un UAV (dron de ala fija) basado en el modelo \u003Cstrong>Eclipson Pathfinder\u003C/strong> para misiones de vigilancia y reconocimiento. Se busca crear un sistema que pueda operar de forma \u003Cstrong>completamente autónoma\u003C/strong>, responder a comandos para dirigirse a puntos específicos y, una vez en posición, permitir control manual o continuar en modo automático mientras analiza el entorno.\u003C/p>\n\u003Cp>El sistema está diseñado para ser \u003Cstrong>eficiente y de bajo costo\u003C/strong>, utilizando solo los componentes esenciales para maximizar la autonomía de vuelo y la funcionalidad.\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"características-principales\">Características Principales\u003C/h2>\n\u003Ch3 id=\"navegación-autónoma\">Navegación Autónoma\u003C/h3>\n\u003Cul>\n\u003Cli>Sistema de vuelo autónomo mediante \u003Cstrong>Cube Orange + GPS Here3\u003C/strong>\u003C/li>\n\u003Cli>Capacidad de seguir rutas predefinidas con múltiples waypoints\u003C/li>\n\u003Cli>Algoritmos de evasión de obstáculos y rutas alternativas\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"modos-de-operación\">Modos de Operación\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Modo autónomo\u003C/strong>: Navegación a un punto designado sin intervención humana\u003C/li>\n\u003Cli>\u003Cstrong>Modo de espera (Loiter Mode)\u003C/strong>: Mantiene posición en la zona de interés mientras analiza el entorno\u003C/li>\n\u003Cli>\u003Cstrong>Control manual\u003C/strong>: Posibilidad de tomar control con un radio FrSky Taranis X9D\u003C/li>\n\u003Cli>\u003Cstrong>Regreso automático\u003C/strong>: Si no hay intervención o ante batería baja, regresa al punto de origen\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"transmisión-y-análisis\">Transmisión y Análisis\u003C/h3>\n\u003Cul>\n\u003Cli>Transmisión de video FPV en tiempo real mediante el sistema \u003Cstrong>DJI FPV Air Unit\u003C/strong>\u003C/li>\n\u003Cli>Análisis de imágenes (opcional) con \u003Cstrong>Raspberry Pi 4 + Módulo 4G/LTE\u003C/strong> para detección de personas y vehículos\u003C/li>\n\u003Cli>Telemetría bidireccional para monitoreo de estado y ajustes en tiempo real\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"componentes-esenciales\">Componentes Esenciales\u003C/h2>\n\u003Ch3 id=\"1️-estructura-y-propulsión\">1️. Estructura y Propulsión\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Componente\u003C/th>\u003Cth>Especificación\u003C/th>\u003Cth>Función\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Chasis\u003C/td>\u003Ctd>\u003Cstrong>Eclipson Pathfinder\u003C/strong>\u003C/td>\u003Ctd>Estructura aerodinámica impresa en 3D o kit\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Motor\u003C/td>\u003Ctd>\u003Cstrong>T-Motor AT2312 KV1400\u003C/strong>\u003C/td>\u003Ctd>Propulsión principal con alta eficiencia\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Hélice\u003C/td>\u003Ctd>\u003Cstrong>APC 7x4\u003C/strong>\u003C/td>\u003Ctd>Optimizada para eficiencia y empuje\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>ESC\u003C/td>\u003Ctd>\u003Cstrong>T-Motor 30A\u003C/strong>\u003C/td>\u003Ctd>Control preciso del motor\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Servos\u003C/td>\u003Ctd>\u003Cstrong>2x SG90 o MG90S\u003C/strong>\u003C/td>\u003Ctd>Control de superficies de vuelo\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Batería\u003C/td>\u003Ctd>\u003Cstrong>3S 2200mAh - 4S 3300mAh\u003C/strong>\u003C/td>\u003Ctd>Alimentación con autonomía de 30-45 min\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Power Module\u003C/td>\u003Ctd>\u003Cstrong>Holybro PM06\u003C/strong>\u003C/td>\u003Ctd>Distribución y monitoreo de energía\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch3 id=\"2️-controlador-de-vuelo-y-navegación\">2️. Controlador de Vuelo y Navegación\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Componente\u003C/th>\u003Cth>Especificación\u003C/th>\u003Cth>Función\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Controlador\u003C/td>\u003Ctd>\u003Cstrong>Cube Orange + Carrier Board\u003C/strong>\u003C/td>\u003Ctd>Cerebro del sistema, procesamiento de vuelo\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>GPS\u003C/td>\u003Ctd>\u003Cstrong>Here3 GPS\u003C/strong>\u003C/td>\u003Ctd>Posicionamiento preciso y navegación\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Sensor de velocidad\u003C/td>\u003Ctd>\u003Cstrong>Airspeed Sensor digital\u003C/strong>\u003C/td>\u003Ctd>Medición de velocidad relativa al aire\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch3 id=\"3️-comunicación-y-control\">3️. Comunicación y Control\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Componente\u003C/th>\u003Cth>Especificación\u003C/th>\u003Cth>Función\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Radio control\u003C/td>\u003Ctd>\u003Cstrong>FrSky Taranis X9D + Receptor R9 Slim+ SBUS\u003C/strong>\u003C/td>\u003Ctd>Control manual de respaldo\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Telemetría\u003C/td>\u003Ctd>\u003Cstrong>SiK Radio 915MHz o RFD900x\u003C/strong>\u003C/td>\u003Ctd>Comunicación bidireccional de datos\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Sistema FPV\u003C/td>\u003Ctd>\u003Cstrong>DJI FPV Air Unit\u003C/strong>\u003C/td>\u003Ctd>Transmisión de video en tiempo real\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch3 id=\"4️-visión-y-procesamiento-opcional\">4️. Visión y Procesamiento (Opcional)\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Componente\u003C/th>\u003Cth>Especificación\u003C/th>\u003Cth>Función\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Computadora\u003C/td>\u003Ctd>\u003Cstrong>Raspberry Pi 4\u003C/strong>\u003C/td>\u003Ctd>Procesamiento de imágenes y datos\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Software\u003C/td>\u003Ctd>\u003Cstrong>YOLOv8 ligero\u003C/strong>\u003C/td>\u003Ctd>Detección de objetos en tiempo real\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Conectividad\u003C/td>\u003Ctd>\u003Cstrong>Módulo 4G/LTE USB\u003C/strong>\u003C/td>\u003Ctd>Transmisión de datos a larga distancia\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Chr>\n\u003Ch2 id=\"modos-de-operación-detallados\">Modos de Operación Detallados\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>Modo Autónomo\u003C/strong>:\n\u003Cul>\n\u003Cli>El drone despega y vuela hasta el punto designado siguiendo una ruta predefinida\u003C/li>\n\u003Cli>Mantiene altitud y velocidad constantes durante el trayecto\u003C/li>\n\u003Cli>Ajusta parámetros de vuelo según condiciones ambientales\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Modo Loiter\u003C/strong>:\n\u003Cul>\n\u003Cli>Mantiene un patrón de vuelo circular o estacionario en la zona de interés\u003C/li>\n\u003Cli>Ajusta radio y velocidad según necesidades de vigilancia\u003C/li>\n\u003Cli>Optimiza consumo energético para maximizar tiempo en zona\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Control Manual\u003C/strong>:\n\u003Cul>\n\u003Cli>El operador puede tomar el control con el radio FrSky en cualquier momento\u003C/li>\n\u003Cli>Transición suave entre modos autónomo y manual\u003C/li>\n\u003Cli>Alertas de telemetría para el operador\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Modo FPV\u003C/strong>:\n\u003Cul>\n\u003Cli>Transmite video en tiempo real con DJI FPV\u003C/li>\n\u003Cli>Baja latencia para control preciso\u003C/li>\n\u003Cli>Superposición de datos de telemetría en pantalla\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Regreso Automático\u003C/strong>:\n\u003Cul>\n\u003Cli>Se activa por comando, batería baja o pérdida de señal\u003C/li>\n\u003Cli>Calcula ruta óptima de regreso considerando viento y obstáculos\u003C/li>\n\u003Cli>Aterrizaje automático en punto de origen\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Chr>\n\u003Ch2 id=\"plan-de-implementación\">Plan de Implementación\u003C/h2>\n\u003Ch3 id=\"fase-1-construcción\">Fase 1: Construcción\u003C/h3>\n\u003Cul>\n\u003Cli>Ensamblar el UAV con los componentes mínimos\u003C/li>\n\u003Cli>Integrar sistema de propulsión y control\u003C/li>\n\u003Cli>Instalar controlador de vuelo y sensores\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"fase-2-configuración\">Fase 2: Configuración\u003C/h3>\n\u003Cul>\n\u003Cli>Configurar y calibrar Cube Orange con ArduPilot\u003C/li>\n\u003Cli>Programar misiones básicas y parámetros de vuelo\u003C/li>\n\u003Cli>Ajustar PID para estabilidad óptima\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"fase-3-pruebas\">Fase 3: Pruebas\u003C/h3>\n\u003Cul>\n\u003Cli>Realizar pruebas de vuelo controlado\u003C/li>\n\u003Cli>Validar navegación autónoma con waypoints\u003C/li>\n\u003Cli>Probar sistemas de seguridad y recuperación\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"fase-4-optimización\">Fase 4: Optimización\u003C/h3>\n\u003Cul>\n\u003Cli>Integrar el sistema FPV de DJI\u003C/li>\n\u003Cli>Implementar análisis de imágenes (opcional)\u003C/li>\n\u003Cli>Optimizar consumo energético y autonomía\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"recursos-y-referencias\">Recursos y Referencias\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://ardupilot.org/plane/\">Documentación oficial de ArduPilot\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.eclipson-airplanes.com/\">Especificaciones del Eclipson Pathfinder\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://docs.cubepilot.org/user-guides/autopilot/the-cube-module-overview\">Guía de configuración de Cube Orange\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/ultralytics/ultralytics\">Tutorial de implementación de YOLOv8 en Raspberry Pi\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":135,"localImagePaths":187,"remoteImagePaths":188,"frontmatter":189,"imagePaths":192},[136,139,142,145,148,151,154,157,160,163,166,169,172,175,178,181,184],{"depth":73,"slug":137,"text":138},"resumen-del-proyecto","Resumen del Proyecto",{"depth":73,"slug":140,"text":141},"características-principales","Características Principales",{"depth":77,"slug":143,"text":144},"navegación-autónoma","Navegación Autónoma",{"depth":77,"slug":146,"text":147},"modos-de-operación","Modos de Operación",{"depth":77,"slug":149,"text":150},"transmisión-y-análisis","Transmisión y Análisis",{"depth":73,"slug":152,"text":153},"componentes-esenciales","Componentes Esenciales",{"depth":77,"slug":155,"text":156},"1️-estructura-y-propulsión","1️. Estructura y Propulsión",{"depth":77,"slug":158,"text":159},"2️-controlador-de-vuelo-y-navegación","2️. Controlador de Vuelo y Navegación",{"depth":77,"slug":161,"text":162},"3️-comunicación-y-control","3️. Comunicación y Control",{"depth":77,"slug":164,"text":165},"4️-visión-y-procesamiento-opcional","4️. Visión y Procesamiento (Opcional)",{"depth":73,"slug":167,"text":168},"modos-de-operación-detallados","Modos de Operación Detallados",{"depth":73,"slug":170,"text":171},"plan-de-implementación","Plan de Implementación",{"depth":77,"slug":173,"text":174},"fase-1-construcción","Fase 1: Construcción",{"depth":77,"slug":176,"text":177},"fase-2-configuración","Fase 2: Configuración",{"depth":77,"slug":179,"text":180},"fase-3-pruebas","Fase 3: Pruebas",{"depth":77,"slug":182,"text":183},"fase-4-optimización","Fase 4: Optimización",{"depth":73,"slug":185,"text":186},"recursos-y-referencias","Recursos y Referencias",[],[],{"title":125,"slug":122,"description":126,"tags":190,"added":191},[100],["Date","2024-05-05T06:00:00.000Z"],[],"miselio-ia",{"id":193,"data":195,"body":200,"filePath":201,"digest":202,"rendered":203},{"title":196,"slug":193,"description":197,"added":198,"tags":199},"Intelligent Cultivation System (In Progress)","Modular, AI-driven mushroom cultivation system with automated environmental controls.",["Date","2025-07-25T04:19:32.107Z"],[100],"## Resumen del Proyecto\n\nEste proyecto consiste en el desarrollo de un sistema modular, inteligente y completamente automatizado para el cultivo de hongos comestibles y medicinales. Cada unidad funciona como un ecosistema independiente, monitoreado y ajustado automáticamente mediante inteligencia artificial, con control total desde una aplicación móvil o panel web.\n\nEl sistema está diseñado para optimizar las condiciones de crecimiento de diferentes especies de hongos, maximizando la producción mientras minimiza la intervención humana.\n\n\\#Hongos #Automatización #IoT #Cultivo #IA #RaspberryPi #ESP32\n\n***\n\n## Características Principales\n\n### Diseño Modular\n\n* Estructura vertical con cubos independientes de distintos tamaños\n* Cada módulo cuenta con su propio sistema de control ambiental\n* Posibilidad de cultivar diferentes especies simultáneamente\n* Escalabilidad según necesidades de producción\n\n### Control Ambiental Inteligente\n\n* Monitoreo en tiempo real de parámetros críticos\n* Ajuste automático según la especie seleccionada\n* Alertas y notificaciones ante condiciones anómalas\n* Registro histórico para análisis y optimización\n\n### Análisis Visual con IA\n\n* Detección del estado de crecimiento mediante visión artificial\n* Predicción del momento óptimo de cosecha\n* Identificación temprana de contaminaciones o problemas\n* Aprendizaje continuo para mejorar resultados\n\n***\n\n## Componentes del Sistema\n\n### 🏗️ Infraestructura y Diseño\n\n* **Estructura modular:** Estante vertical con cubos de distintos tamaños\n* **\\[\\[Proyectos/Invernadero inteligente/Cubos|Cubos]]:** Cada cubo cuenta con su propio sistema de control ambiental\n* **Material de sustrato:** Variable según la especie (paja, aserrín, café, etc.)\n* **Aislamiento térmico:** Para mantener condiciones estables independientemente del ambiente exterior\n\n### 🌡️ Control Ambiental Automatizado\n\nCada cubo tendrá sensores y actuadores para mantener un microclima autónomo, ajustado según el tipo de hongo ingresado vía app.\n\n| Sensores    | Actuadores                           |\n| ----------- | ------------------------------------ |\n| Temperatura | Humidificadores / Deshumidificadores |\n| Humedad     | Ventiladores / Extractores de aire   |\n| CO₂         | Bombas de agua (riego automatizado)  |\n| Luz         | Iluminación LED programable          |\n\n*Cada cubo ajusta estos parámetros automáticamente en función de la especie de hongo seleccionada.*\n\n### 🤖 IA para Monitoreo y Gestión\n\n* Base de datos con parámetros ideales para cada especie\n* Visión artificial para monitorear y predecir el momento de cosecha\n* Algoritmos de aprendizaje para optimización continua\n\n| Componente       | Tecnología                                           |\n| ---------------- | ---------------------------------------------------- |\n| Cámaras          | Una por cubo para capturar imágenes periódicas       |\n| Machine Learning | Modelos con **YOLOv8**, **TensorFlow** o **PyTorch** |\n| Análisis         | Detección automática de crecimiento y madurez        |\n| Adaptación       | Ajuste del ambiente según análisis visual del hongo  |\n\n### 🔁 Automatización y Comunicación\n\n* Plataforma central de gestión para todos los cubos\n* Microcontroladores como **ESP32 / ESP8266** o **Raspberry Pi** en cada cubo\n* Comunicación basada en **MQTT + Python**\n* Automatización con **Node-RED** o **Home Assistant**\n\n### 🖥️ Interfaz de Usuario\n\nUna plataforma web o app para controlar, visualizar y recibir notificaciones.\n\n| Funcionalidades                       | Tecnologías                                      |\n| ------------------------------------- | ------------------------------------------------ |\n| Selección del tipo de hongo por cubo  | **Backend:** Flask, Django o FastAPI (Python)    |\n| Visualización de datos en tiempo real | **Frontend:** Grafana (visualización)            |\n| Notificaciones de cosecha             | **Interfaz:** Home Assistant (control intuitivo) |\n| Control manual de parámetros          | **Móvil:** PWA o app nativa                      |\n\n***\n\n## 🧩 Hardware Requerido\n\nPara detalles completos sobre los componentes de hardware, consultar \\[\\[Proyectos/Invernadero inteligente/Hardware|Hardware]].\n\n* **Unidad de procesamiento:** Raspberry Pi 4 / Jetson Nano\n* **Controladores locales:** ESP32 / ESP8266\n* **Sensores:** Temperatura, humedad, CO₂, luz\n* **Cámaras:** HD por cubo para monitoreo visual\n* **Actuadores:** Ventiladores, humidificadores, calefactores, bombas\n\n***\n\n## Flujo de Operación\n\n1. **Configuración inicial:**\n   * El usuario inserta el cubo en el estante\n   * Selecciona el tipo de hongo desde la interfaz\n   * El sistema configura automáticamente los parámetros ideales\n2. **Ciclo de cultivo:**\n   * Monitoreo constante de condiciones ambientales\n   * Ajustes automáticos en tiempo real\n   * Análisis visual del crecimiento\n   * Registro de datos para optimización\n3. **Cosecha:**\n   * Detección del momento óptimo mediante IA\n   * Notificación al usuario\n   * Registro de resultados para mejorar ciclos futuros\n\n***\n\n## Próximos Pasos\n\n### Fase 1: Prototipo\n\n* Construcción de un módulo de prueba\n* Implementación del sistema básico de sensores\n* Desarrollo de la interfaz de control preliminar\n\n### Fase 2: Desarrollo de IA\n\n* Recolección de datos de crecimiento\n* Entrenamiento de modelos de visión artificial\n* Pruebas de predicción de cosecha\n\n### Fase 3: Escalamiento\n\n* Optimización del diseño modular\n* Mejora de la eficiencia energética\n* Implementación de sistema completo multi-módulo\n\n***\n\n## Referencias y Recursos\n\n* [Parámetros óptimos de cultivo por especie](https://fungi.com/blogs/articles/the-parameters-of-mushroom-cultivation)\n* [Implementación de visión artificial en agricultura](https://www.mdpi.com/2073-4395/10/5/728)\n* [Sistemas IoT para cultivos controlados](https://www.sciencedirect.com/science/article/pii/S2214317320300360)","projects/miselio-ia.md","537446e2502650b3",{"html":204,"metadata":205},"\u003Ch2 id=\"resumen-del-proyecto\">Resumen del Proyecto\u003C/h2>\n\u003Cp>Este proyecto consiste en el desarrollo de un sistema modular, inteligente y completamente automatizado para el cultivo de hongos comestibles y medicinales. Cada unidad funciona como un ecosistema independiente, monitoreado y ajustado automáticamente mediante inteligencia artificial, con control total desde una aplicación móvil o panel web.\u003C/p>\n\u003Cp>El sistema está diseñado para optimizar las condiciones de crecimiento de diferentes especies de hongos, maximizando la producción mientras minimiza la intervención humana.\u003C/p>\n\u003Cp>#Hongos #Automatización #IoT #Cultivo #IA #RaspberryPi #ESP32\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"características-principales\">Características Principales\u003C/h2>\n\u003Ch3 id=\"diseño-modular\">Diseño Modular\u003C/h3>\n\u003Cul>\n\u003Cli>Estructura vertical con cubos independientes de distintos tamaños\u003C/li>\n\u003Cli>Cada módulo cuenta con su propio sistema de control ambiental\u003C/li>\n\u003Cli>Posibilidad de cultivar diferentes especies simultáneamente\u003C/li>\n\u003Cli>Escalabilidad según necesidades de producción\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"control-ambiental-inteligente\">Control Ambiental Inteligente\u003C/h3>\n\u003Cul>\n\u003Cli>Monitoreo en tiempo real de parámetros críticos\u003C/li>\n\u003Cli>Ajuste automático según la especie seleccionada\u003C/li>\n\u003Cli>Alertas y notificaciones ante condiciones anómalas\u003C/li>\n\u003Cli>Registro histórico para análisis y optimización\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"análisis-visual-con-ia\">Análisis Visual con IA\u003C/h3>\n\u003Cul>\n\u003Cli>Detección del estado de crecimiento mediante visión artificial\u003C/li>\n\u003Cli>Predicción del momento óptimo de cosecha\u003C/li>\n\u003Cli>Identificación temprana de contaminaciones o problemas\u003C/li>\n\u003Cli>Aprendizaje continuo para mejorar resultados\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"componentes-del-sistema\">Componentes del Sistema\u003C/h2>\n\u003Ch3 id=\"️-infraestructura-y-diseño\">🏗️ Infraestructura y Diseño\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Estructura modular:\u003C/strong> Estante vertical con cubos de distintos tamaños\u003C/li>\n\u003Cli>\u003Cstrong>[[Proyectos/Invernadero inteligente/Cubos|Cubos]]:\u003C/strong> Cada cubo cuenta con su propio sistema de control ambiental\u003C/li>\n\u003Cli>\u003Cstrong>Material de sustrato:\u003C/strong> Variable según la especie (paja, aserrín, café, etc.)\u003C/li>\n\u003Cli>\u003Cstrong>Aislamiento térmico:\u003C/strong> Para mantener condiciones estables independientemente del ambiente exterior\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"️-control-ambiental-automatizado\">🌡️ Control Ambiental Automatizado\u003C/h3>\n\u003Cp>Cada cubo tendrá sensores y actuadores para mantener un microclima autónomo, ajustado según el tipo de hongo ingresado vía app.\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Sensores\u003C/th>\u003Cth>Actuadores\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Temperatura\u003C/td>\u003Ctd>Humidificadores / Deshumidificadores\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Humedad\u003C/td>\u003Ctd>Ventiladores / Extractores de aire\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>CO₂\u003C/td>\u003Ctd>Bombas de agua (riego automatizado)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Luz\u003C/td>\u003Ctd>Iluminación LED programable\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cp>\u003Cem>Cada cubo ajusta estos parámetros automáticamente en función de la especie de hongo seleccionada.\u003C/em>\u003C/p>\n\u003Ch3 id=\"-ia-para-monitoreo-y-gestión\">🤖 IA para Monitoreo y Gestión\u003C/h3>\n\u003Cul>\n\u003Cli>Base de datos con parámetros ideales para cada especie\u003C/li>\n\u003Cli>Visión artificial para monitorear y predecir el momento de cosecha\u003C/li>\n\u003Cli>Algoritmos de aprendizaje para optimización continua\u003C/li>\n\u003C/ul>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Componente\u003C/th>\u003Cth>Tecnología\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Cámaras\u003C/td>\u003Ctd>Una por cubo para capturar imágenes periódicas\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Machine Learning\u003C/td>\u003Ctd>Modelos con \u003Cstrong>YOLOv8\u003C/strong>, \u003Cstrong>TensorFlow\u003C/strong> o \u003Cstrong>PyTorch\u003C/strong>\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Análisis\u003C/td>\u003Ctd>Detección automática de crecimiento y madurez\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Adaptación\u003C/td>\u003Ctd>Ajuste del ambiente según análisis visual del hongo\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch3 id=\"-automatización-y-comunicación\">🔁 Automatización y Comunicación\u003C/h3>\n\u003Cul>\n\u003Cli>Plataforma central de gestión para todos los cubos\u003C/li>\n\u003Cli>Microcontroladores como \u003Cstrong>ESP32 / ESP8266\u003C/strong> o \u003Cstrong>Raspberry Pi\u003C/strong> en cada cubo\u003C/li>\n\u003Cli>Comunicación basada en \u003Cstrong>MQTT + Python\u003C/strong>\u003C/li>\n\u003Cli>Automatización con \u003Cstrong>Node-RED\u003C/strong> o \u003Cstrong>Home Assistant\u003C/strong>\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"️-interfaz-de-usuario\">🖥️ Interfaz de Usuario\u003C/h3>\n\u003Cp>Una plataforma web o app para controlar, visualizar y recibir notificaciones.\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Funcionalidades\u003C/th>\u003Cth>Tecnologías\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Selección del tipo de hongo por cubo\u003C/td>\u003Ctd>\u003Cstrong>Backend:\u003C/strong> Flask, Django o FastAPI (Python)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Visualización de datos en tiempo real\u003C/td>\u003Ctd>\u003Cstrong>Frontend:\u003C/strong> Grafana (visualización)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Notificaciones de cosecha\u003C/td>\u003Ctd>\u003Cstrong>Interfaz:\u003C/strong> Home Assistant (control intuitivo)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Control manual de parámetros\u003C/td>\u003Ctd>\u003Cstrong>Móvil:\u003C/strong> PWA o app nativa\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Chr>\n\u003Ch2 id=\"-hardware-requerido\">🧩 Hardware Requerido\u003C/h2>\n\u003Cp>Para detalles completos sobre los componentes de hardware, consultar [[Proyectos/Invernadero inteligente/Hardware|Hardware]].\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Unidad de procesamiento:\u003C/strong> Raspberry Pi 4 / Jetson Nano\u003C/li>\n\u003Cli>\u003Cstrong>Controladores locales:\u003C/strong> ESP32 / ESP8266\u003C/li>\n\u003Cli>\u003Cstrong>Sensores:\u003C/strong> Temperatura, humedad, CO₂, luz\u003C/li>\n\u003Cli>\u003Cstrong>Cámaras:\u003C/strong> HD por cubo para monitoreo visual\u003C/li>\n\u003Cli>\u003Cstrong>Actuadores:\u003C/strong> Ventiladores, humidificadores, calefactores, bombas\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"flujo-de-operación\">Flujo de Operación\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>Configuración inicial:\u003C/strong>\n\u003Cul>\n\u003Cli>El usuario inserta el cubo en el estante\u003C/li>\n\u003Cli>Selecciona el tipo de hongo desde la interfaz\u003C/li>\n\u003Cli>El sistema configura automáticamente los parámetros ideales\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Ciclo de cultivo:\u003C/strong>\n\u003Cul>\n\u003Cli>Monitoreo constante de condiciones ambientales\u003C/li>\n\u003Cli>Ajustes automáticos en tiempo real\u003C/li>\n\u003Cli>Análisis visual del crecimiento\u003C/li>\n\u003Cli>Registro de datos para optimización\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Cosecha:\u003C/strong>\n\u003Cul>\n\u003Cli>Detección del momento óptimo mediante IA\u003C/li>\n\u003Cli>Notificación al usuario\u003C/li>\n\u003Cli>Registro de resultados para mejorar ciclos futuros\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Chr>\n\u003Ch2 id=\"próximos-pasos\">Próximos Pasos\u003C/h2>\n\u003Ch3 id=\"fase-1-prototipo\">Fase 1: Prototipo\u003C/h3>\n\u003Cul>\n\u003Cli>Construcción de un módulo de prueba\u003C/li>\n\u003Cli>Implementación del sistema básico de sensores\u003C/li>\n\u003Cli>Desarrollo de la interfaz de control preliminar\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"fase-2-desarrollo-de-ia\">Fase 2: Desarrollo de IA\u003C/h3>\n\u003Cul>\n\u003Cli>Recolección de datos de crecimiento\u003C/li>\n\u003Cli>Entrenamiento de modelos de visión artificial\u003C/li>\n\u003Cli>Pruebas de predicción de cosecha\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"fase-3-escalamiento\">Fase 3: Escalamiento\u003C/h3>\n\u003Cul>\n\u003Cli>Optimización del diseño modular\u003C/li>\n\u003Cli>Mejora de la eficiencia energética\u003C/li>\n\u003Cli>Implementación de sistema completo multi-módulo\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"referencias-y-recursos\">Referencias y Recursos\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://fungi.com/blogs/articles/the-parameters-of-mushroom-cultivation\">Parámetros óptimos de cultivo por especie\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.mdpi.com/2073-4395/10/5/728\">Implementación de visión artificial en agricultura\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.sciencedirect.com/science/article/pii/S2214317320300360\">Sistemas IoT para cultivos controlados\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":206,"localImagePaths":257,"remoteImagePaths":258,"frontmatter":259,"imagePaths":262},[207,208,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254],{"depth":73,"slug":137,"text":138},{"depth":73,"slug":140,"text":141},{"depth":77,"slug":210,"text":211},"diseño-modular","Diseño Modular",{"depth":77,"slug":213,"text":214},"control-ambiental-inteligente","Control Ambiental Inteligente",{"depth":77,"slug":216,"text":217},"análisis-visual-con-ia","Análisis Visual con IA",{"depth":73,"slug":219,"text":220},"componentes-del-sistema","Componentes del Sistema",{"depth":77,"slug":222,"text":223},"️-infraestructura-y-diseño","🏗️ Infraestructura y Diseño",{"depth":77,"slug":225,"text":226},"️-control-ambiental-automatizado","🌡️ Control Ambiental Automatizado",{"depth":77,"slug":228,"text":229},"-ia-para-monitoreo-y-gestión","🤖 IA para Monitoreo y Gestión",{"depth":77,"slug":231,"text":232},"-automatización-y-comunicación","🔁 Automatización y Comunicación",{"depth":77,"slug":234,"text":235},"️-interfaz-de-usuario","🖥️ Interfaz de Usuario",{"depth":73,"slug":237,"text":238},"-hardware-requerido","🧩 Hardware Requerido",{"depth":73,"slug":240,"text":241},"flujo-de-operación","Flujo de Operación",{"depth":73,"slug":243,"text":244},"próximos-pasos","Próximos Pasos",{"depth":77,"slug":246,"text":247},"fase-1-prototipo","Fase 1: Prototipo",{"depth":77,"slug":249,"text":250},"fase-2-desarrollo-de-ia","Fase 2: Desarrollo de IA",{"depth":77,"slug":252,"text":253},"fase-3-escalamiento","Fase 3: Escalamiento",{"depth":73,"slug":255,"text":256},"referencias-y-recursos","Referencias y Recursos",[],[],{"title":196,"slug":193,"description":197,"tags":260,"added":261},[100],["Date","2025-07-25T04:19:32.107Z"],[]]